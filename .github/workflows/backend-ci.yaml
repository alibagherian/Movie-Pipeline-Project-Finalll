name: Backend Continuous Integration
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'starter/backend/**'  
    branches: 
      - main   
jobs:
  LINT:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pipenv
    - name: Install project dependencies and flake8
      run: |
        cd starter/backend
        pipenv install --dev
        pipenv run pip install flake8
    - name: Run lint
      run: |
        cd starter/backend
        pipenv run flake8
  TEST:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies 
        run: |      
              python -m pip install --upgrade pip setuptools wheel        
              pip install pipenv
      - name: install project dependencies and pytest
        run: |
            cd starter/backend
            pipenv install --dev         
            pipenv run pip install pytest      
      - name: run tests
        run: |
            cd starter/backend
            pipenv run test


  BUILD:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: backend 
      REACT_APP_MOVIE_API_URL: 'http://localhost:5000'  

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd starter/backend
          python -m pip install --upgrade pip setuptools wheel
          pip install pipenv
          pipenv install --dev
         
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1        
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  
      
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}        