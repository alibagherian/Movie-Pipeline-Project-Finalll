name: Frontend Continuous Integration
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'starter/frontend/**'  
    branches: 
      - main

jobs:
  LINT:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest' 

      - name: Cache dependencies
        uses: actions/cache@v4  
        with:
          path: ~/.npm  
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: cd starter/frontend && npm ci
      - name: Run lint      
        run: cd starter/frontend && npm run lint

  TEST: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Cache dependencies
        uses: actions/cache@v4  
        with:
          path: ~/.npm  
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies 
        run: cd starter/frontend && npm ci
      - name: Run test
        run: cd starter/frontend && npm run test

  BUILD:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest
    env: 
      REACT_APP_MOVIE_API_URL: 'http://localhost:5000' 
      ECR_REPOSITORY: frontend       
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Cache dependencies
        uses: actions/cache@v4  
        with:
          path: ~/.npm  
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-          

      - name: Install dependencies
        run: cd starter/frontend && npm ci    
      - name: Run test
        run: cd starter/frontend && npm run test   
      
      - name: Build Docker image
        run: |
          docker build -t frontend-image starter/frontend